{
  "openapi": "3.0.0",
  "info": {
    "title": "Todo and Tour API",
    "version": "1.0.0",
    "description": "API for managing todo tasks, tours, and user authentication"
  },
  "servers": [
    {
      "url": "http://localhost:5000/api"
    }
  ],
  "paths": {
    "/users/signup": {
      "post": {
        "summary": "Register a new user",
        "tags": ["Users"],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UserSignup"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "User created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request"
          }
        }
      }
    },
    "/users/login": {
      "post": {
        "summary": "Authenticate a user",
        "tags": ["Users"],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UserLogin"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "User authenticated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request"
          }
        }
      }
    },
    "/users/me": {
      "get": {
        "summary": "Get user data",
        "tags": ["Users"],
        "security": [{ "bearerAuth": [] }],
        "responses": {
          "200": {
            "description": "User data retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/User"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/todoTasks": {
      "get": {
        "summary": "Get all todo tasks",
        "tags": ["Todo Tasks"],
        "security": [{ "bearerAuth": [] }],
        "responses": {
          "200": {
            "description": "Todo tasks retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/TodoTask"
                  }
                }
              }
            }
          },
          "500": {
            "description": "Server error"
          }
        }
      },
      "post": {
        "summary": "Add a new todo task",
        "tags": ["Todo Tasks"],
        "security": [{ "bearerAuth": [] }],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TodoTaskInput"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Todo task created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TodoTask"
                }
              }
            }
          },
          "500": {
            "description": "Server error"
          }
        }
      }
    },
    "/todoTasks/{id}": {
      "get": {
        "summary": "Get a todo task by ID",
        "tags": ["Todo Tasks"],
        "security": [{ "bearerAuth": [] }],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Todo task retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TodoTask"
                }
              }
            }
          },
          "404": {
            "description": "Todo task not found"
          },
          "500": {
            "description": "Server error"
          }
        }
      },
      "put": {
        "summary": "Update a todo task",
        "tags": ["Todo Tasks"],
        "security": [{ "bearerAuth": [] }],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TodoTaskInput"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Todo task updated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TodoTask"
                }
              }
            }
          },
          "404": {
            "description": "Todo task not found"
          },
          "500": {
            "description": "Server error"
          }
        }
      },
      "delete": {
        "summary": "Delete a todo task",
        "tags": ["Todo Tasks"],
        "security": [{ "bearerAuth": [] }],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Todo task deleted successfully"
          },
          "404": {
            "description": "Todo task not found"
          },
          "500": {
            "description": "Server error"
          }
        }
      }
    },
    "/tours": {
      "get": {
        "summary": "Get all tours",
        "tags": ["Tours"],
        "responses": {
          "200": {
            "description": "Tours retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Tour"
                  }
                }
              }
            }
          },
          "500": {
            "description": "Server error"
          }
        }
      },
      "post": {
        "summary": "Create a new tour",
        "tags": ["Tours"],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TourInput"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Tour created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Tour"
                }
              }
            }
          },
          "400": {
            "description": "Bad request"
          }
        }
      }
    },
    "/tours/{tourId}": {
      "get": {
        "summary": "Get a tour by ID",
        "tags": ["Tours"],
        "parameters": [
          {
            "in": "path",
            "name": "tourId",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Tour retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Tour"
                }
              }
            }
          },
          "404": {
            "description": "Tour not found"
          },
          "500": {
            "description": "Server error"
          }
        }
      },
      "put": {
        "summary": "Update a tour",
        "tags": ["Tours"],
        "parameters": [
          {
            "in": "path",
            "name": "tourId",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TourInput"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Tour updated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Tour"
                }
              }
            }
          },
          "404": {
            "description": "Tour not found"
          },
          "500": {
            "description": "Server error"
          }
        }
      },
      "delete": {
        "summary": "Delete a tour",
        "tags": ["Tours"],
        "parameters": [
          {
            "in": "path",
            "name": "tourId",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Tour deleted successfully"
          },
          "404": {
            "description": "Tour not found"
          },
          "500": {
            "description": "Server error"
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "User": {
        "type": "object",
        "properties": {
          "_id": { "type": "string" },
          "name": { "type": "string" },
          "email": { "type": "string" }
        }
      },
      "UserSignup": {
        "type": "object",
        "required": ["name", "email", "password"],
        "properties": {
          "name": { "type": "string" },
          "email": { "type": "string" },
          "password": { "type": "string" }
        }
      },
      "UserLogin": {
        "type": "object",
        "required": ["email", "password"],
        "properties": {
          "email": { "type": "string" },
          "password": { "type": "string" }
        }
      },
      "UserResponse": {
        "type": "object",
        "properties": {
          "email": { "type": "string" },
          "token": { "type": "string" }
        }
      },
      "TodoTask": {
        "type": "object",
        "properties": {
          "_id": { "type": "string" },
          "title": { "type": "string" },
          "description": { "type": "string" },
          "dueDate": { "type": "string", "format": "date-time" },
          "completed": { "type": "boolean" },
          "user_id": { "type": "string" },
          "createdAt": { "type": "string", "format": "date-time" },
          "updatedAt": { "type": "string", "format": "date-time" }
        }
      },
      "TodoTaskInput": {
        "type": "object",
        "required": ["title", "description", "dueDate"],
        "properties": {
          "title": { "type": "string" },
          "description": { "type": "string" },
          "dueDate": { "type": "string", "format": "date-time" },
          "completed": { "type": "boolean" }
        }
      },
      "Tour": {
        "type": "object",
        "properties": {
          "_id": { "type": "string" },
          "name": { "type": "string" },
          "info": { "type": "string" },
          "image": { "type": "string" },
          "price": { "type": "string" },
          "createdAt": { "type": "string", "format": "date-time" },
          "updatedAt": { "type": "string", "format": "date-time" }
        }
      },
      "TourInput": {
        "type": "object",
        "required": ["name", "info", "image", "price"],
        "properties": {
          "name": { "type": "string" },
          "info": { "type": "string" },
          "image": { "type": "string" },
          "price": { "type": "string" }
        }
      }
    },
    "securitySchemes": {
      "bearerAuth": {
        "type": "http",
        "scheme": "bearer",
        "bearerFormat": "JWT"
      }
    }
  }
}
